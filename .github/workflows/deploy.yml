name: IA Content & Deploy

on:
  schedule:
    # Todo dia √†s 07:00 UTC (04:00 BRT)
    - cron: '0 7 * * *'
  push:
    branches: [main]
  workflow_dispatch: # Permite execu√ß√£o manual

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  DALLE_ORG_ID: ${{ secrets.DALLE_ORG_ID }}
  POSTS_PER_DAY: ${{ secrets.POSTS_PER_DAY || '5' }}
  DEFAULT_SITE: 'site-template'
  REVALIDATE_TOKEN: ${{ secrets.REVALIDATE_TOKEN }}

jobs:
  generate-and-deploy:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build packages
        run: npm run build:all

      - name: Generate new posts
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: npm run generate-posts
        env:
          OPENAI_API_KEY: ${{ env.OPENAI_API_KEY }}
          DALLE_ORG_ID: ${{ env.DALLE_ORG_ID }}
          POSTS_PER_DAY: ${{ env.POSTS_PER_DAY }}
          DEFAULT_SITE: ${{ env.DEFAULT_SITE }}

      - name: Check for new content
        id: check_changes
        run: |
          if [[ `git status --porcelain` ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "New content detected"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No new content"
          fi

      - name: Commit new posts
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config user.name "IA Content Bot"
          git config user.email "bot@multi-site-ai.com"
          git add .
          git commit -m "chore(content): add daily posts $(date -u +'%Y-%m-%d')"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger ISR revalidation
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          # Revalidar homepage
          curl -X POST "${{ secrets.SITE_TEMPLATE_URL }}/api/revalidate" \
            -H "Authorization: Bearer ${{ env.REVALIDATE_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"path": "/"}'
        continue-on-error: true

      - name: Create summary
        run: |
          echo "## üöÄ Deploy Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **New content**: ${{ steps.check_changes.outputs.changes }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ steps.check_changes.outputs.changes }}" == "true" ]]; then
            echo "- **Posts generated**: ${{ env.POSTS_PER_DAY }}" >> $GITHUB_STEP_SUMMARY
          fi

  # Job separado para monitoramento
  monitor:
    if: failure()
    needs: [generate-and-deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Notify failure
        run: |
          echo "‚ùå Deploy failed - check logs and fix issues"
          # TODO: Adicione notifica√ß√£o via Slack/Discord/Email se necess√°rio 